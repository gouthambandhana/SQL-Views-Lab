-- Task 7: Creating Views
-- ======================

-- Sample tables
CREATE TABLE Departments (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(50),
    location VARCHAR(50)
);

CREATE TABLE Employees (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(50),
    dept_id INT,
    salary DECIMAL(10,2),
    hire_date DATE,
    FOREIGN KEY (dept_id) REFERENCES Departments(dept_id)
);

-- Insert sample data
INSERT INTO Departments (dept_id, dept_name, location) VALUES
(1, 'HR', 'Hyderabad'),
(2, 'Finance', 'Mumbai'),
(3, 'IT', 'Bangalore');

INSERT INTO Employees (emp_id, emp_name, dept_id, salary, hire_date) VALUES
(101, 'Alice', 1, 45000, '2020-06-10'),
(102, 'Bob', 2, 55000, '2019-03-15'),
(103, 'Charlie', 3, 60000, '2021-01-20'),
(104, 'David', 3, 75000, '2018-11-01'),
(105, 'Eva', 2, 30000, '2022-05-12');

-------------------------------------------------
-- 1. Basic View Creation
-------------------------------------------------
CREATE VIEW emp_basic AS
SELECT emp_id, emp_name, dept_id
FROM Employees;

SELECT * FROM emp_basic;

-------------------------------------------------
-- 2. Complex View with Joins
-------------------------------------------------
CREATE VIEW emp_with_dept AS
SELECT e.emp_id, e.emp_name, d.dept_name, e.salary
FROM Employees e
JOIN Departments d ON e.dept_id = d.dept_id;

SELECT * FROM emp_with_dept;

-------------------------------------------------
-- 3. Filtered View
-------------------------------------------------
CREATE VIEW high_salary_emps AS
SELECT emp_id, emp_name, salary
FROM Employees
WHERE salary > 50000;

SELECT * FROM high_salary_emps;

-------------------------------------------------
-- 4. Aggregated View
-------------------------------------------------
CREATE VIEW dept_avg_salary AS
SELECT d.dept_name, AVG(e.salary) AS avg_salary
FROM Employees e
JOIN Departments d ON e.dept_id = d.dept_id
GROUP BY d.dept_name;

SELECT * FROM dept_avg_salary;

-------------------------------------------------
-- 5. Using Views in Queries
-------------------------------------------------
-- Example: Get employees who earn above their department's average
SELECT e.emp_name, e.salary, v.avg_salary
FROM Employees e
JOIN dept_avg_salary v ON e.dept_id = (
    SELECT dept_id FROM Departments WHERE dept_name = v.dept_name
)
WHERE e.salary > v.avg_salary;

-------------------------------------------------
-- 6. Security with Views (hide sensitive columns)
-------------------------------------------------
CREATE VIEW emp_public AS
SELECT emp_id, emp_name, dept_id
FROM Employees;

SELECT * FROM emp_public;
